{"version":3,"sources":["reactjs.png","Components/PostArticle/PostArticleComponent.jsx","Containers/BlogPost/BlogPostComponent.jsx","Containers/Home/HomeComponent.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","PostArticle","props","data","react_default","a","createElement","className","title","length","slice","body","BlogPostComponent","state","posts","paginate","first","last","changePaginateFirst","newPaginate","_this","setState","changePaginateLast","_this2","this","axios","get","then","res","map","post","PostArticle_PostArticleComponent","key","id","onClick","disabled","Component","HomeComponent","react","src","logo","alt","App","HomeComponent_HomeComponent","BlogPostComponent_BlogPostComponent","href","target","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.30f0c6b0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/reactjs.47ce6e77.png\";","import React from \"react\";\r\nimport \"./PostArticleComponent.css\";\r\n\r\nconst PostArticle = props => {\r\n  let data = props.data\r\n  return (\r\n    <div className=\"post-box\">\r\n      <h3 className=\"title-post\">{data.title.length >= 50 ? data.title.slice(0, 50) + \"...\" : data.title}</h3>\r\n      <hr />\r\n      <p className=\"body-post\">{data.body.length >= 250 ? data.body.slice(0, 250) + \"...\" : data.body}</p>\r\n      <span>0 Likes</span>\r\n      <button className=\"btn-like\">Like</button>\r\n      <button className=\"btn-read\">Read more...</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PostArticle;\r\n","import React, { Component } from \"react\";\r\nimport \"./BlogPostComponent.css\";\r\nimport PostArticle from \"../../Components/PostArticle/PostArticleComponent\";\r\nimport axios from \"axios\";\r\n\r\nexport default class BlogPostComponent extends Component {\r\n  state = {\r\n    posts: [],\r\n    paginate: {\r\n      first: 0,\r\n      last: 4\r\n    }\r\n  };\r\n\r\n  changePaginateFirst = () => {\r\n    let newPaginate = this.state.paginate\r\n    newPaginate.first = newPaginate.first - 4\r\n    newPaginate.last = newPaginate.last - 4\r\n    this.setState({ paginate: newPaginate })\r\n  }\r\n\r\n  changePaginateLast = () => {\r\n    let newPaginate = this.state.paginate\r\n    newPaginate.first = newPaginate.first + 4\r\n    newPaginate.last = newPaginate.last + 4\r\n    this.setState({ paginate: newPaginate })\r\n  }\r\n\r\n  componentDidMount() {\r\n    axios.get(\"https://jsonplaceholder.typicode.com/posts\").then(res => {\r\n      this.setState({ posts: res.data })\r\n    });\r\n  }\r\n\r\n  render() {\r\n    let first = this.state.paginate.first\r\n    let last = this.state.paginate.last\r\n    let posts = this.state.posts\r\n    return (\r\n      <div className=\"article-page\">\r\n        <h3 className=\"header\">Articles</h3>\r\n        <hr />\r\n        {\r\n          posts.slice(first, last).map(post => <PostArticle key={post.id} data={post} />)\r\n        }\r\n        <div className=\"paginate\">\r\n          <button className=\"btn-prev\"\r\n            onClick={this.changePaginateFirst}\r\n            disabled={first === 0 ? true : false}>Prev</button>\r\n          <button className=\"btn-next\"\r\n            onClick={this.changePaginateLast}\r\n            disabled={first === (posts.length - 4) ? true : false}>Next</button>\r\n        </div>\r\n        <hr />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component, Fragment } from \"react\";\r\nimport logo from \"../../reactjs.png\";\r\n\r\nexport default class HomeComponent extends Component {\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <header className=\"App-header\">\r\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n          <p>Hello Egin10.</p>\r\n        </header>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\nimport BlogPostComponent from \"./Containers/BlogPost/BlogPostComponent\";\r\nimport HomeComponent from \"./Containers/Home/HomeComponent\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <HomeComponent />\r\n      <BlogPostComponent />\r\n      <footer>\r\n        <p>Copyright&copy;2019.<a href=\"https://github.com/egin10\" target=\"_blank\">egin10</a></p>\r\n      </footer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}